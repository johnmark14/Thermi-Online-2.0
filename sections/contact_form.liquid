<!-- Author: John Mark Connect with me @ GitHub: johnmark14 -->

<!-- Start Section Main for Contact US Page -->
<section class="section-contactus section-padding {% if section.settings.sectionPadding %} remove-extra {% endif %}" style="background-color: {{ section.settings.sectionColor }};">
    <div class="contactus-form-shell shell">
        <h2 class="contactus-form-title section-sub-title">{{ section.settings.sectionHeading }}</h2>
        <div class="form-body" id="contactForm">
            {% render 'pop-modal' %}
            <form ref="contactForm">
                <div class="columns">
                    <div class="column">
                        <div class="form-errors" v-if="errors.length">
                            <p v-if="errors.length == 1">The following field is required:</p>
                            <p v-if="errors.length > 1">The following fields are required:</p>
                            <ul>
                                <li v-for="error in errors">${error}</li>
                            </ul>
                        </div>
                        <input type="hidden" name="form_type" value="contact">
                        <div class="form form-name">
                            <label for="form-name" class="required">Name</label>
                            <input v-model="formName" id="form-name" type="text" name="contact_name" placeholder="Name"/>
                        </div>
                        <div class="form form-email" v-if="screen==true">
                            <label for="form-email" class="required">E-mail</label>
                            <input v-model="formEmail" id="form-email" type="email" name="contact_email" placeholder="E-mail">
                        </div>
                        <div class="form form-tel" v-if="screen==true">
                            <label for="form-tel">Telephone <span>(Optional)</span></label>
                            <input id="form-tel" type="tel" name="contact_tel" placeholder="(XXX) XXX-XXX">
                        </div>
                        <div class="form form-subject">
                            <label for="form-subject" class="required">Form Subject</label>
                            <input v-model="formSubject" id="form-subject" type="text" name="contact_subject" placeholder="Message Subject"/>
                        </div>
                        <div class="form form-message">
                            <label for="form-message" class="required">Message</label>
                            <textarea v-model="formMessage" id="form-message" name="contact_body" rows="4" cols="50" placeholder="Enter your Message Here..."></textarea>
                        </div>
                        <div class="submit">
                            <div class="columns is-multiline is-mobile">
                                <div class="column"> 
                                    <div class="g-recaptcha" data-sitekey="6LciqxwdAAAAAKlDnJa4GVl0j2o__szao9JhRLC0" data-callback="enableBtn"></div>
                                </div>
                                <div class="column">
                                    <a class="side-btn btn-submit" :class="{disabled: captchaNotVerified}" href="/" @click.prevent="sendEmail">
                                        <span>Send Message</span>
                                        <span>{% render 'fat-arrow-right'%}</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="column" v-if="screen == false">
                        <div class="form form-email">
                            <label for="form-email" class="required">E-mail</label>
                            <input v-model="formEmail" id="form-email" type="email" name="contact_email" placeholder="E-mail">
                        </div>
                        <div class="form form-tel">
                            <label for="form-tel">Telephone <span>(Optional)</span></label>
                            <input id="form-tel" type="tel" name="contact_tel" placeholder="(XXX) XXX-XXX">
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

{% schema %}
  {
      "name": "Contact Form",
      "settings": [
        {
        "type": "checkbox", 
        "id": "sectionPadding",
        "label": "Remove Section Padding?",
        "default": false
        },
        {
            "type": "text",
            "id": "sectionHeading",
            "label": "Section Heading",
            "default": "Contact Us"
        },
        {
          "type": "color",
          "id": "sectionColor",
          "label": "Section BG",
          "default": "#f7f7f7"
        }
      ],
      "presets": [
          {
              "name": "Contact Form"
          }
      ]
  }
  {% endschema %}
  <script>
      
      const contactForm = Vue.createApp({
        name: "Contact Form",
        delimiters: ['${', '}'],
        data() {
            return {
                errors: [],
                formName: null,
                formSubject: null,
                formMessage: null,
                formEmail: null,
                screen: false,
                captchaNotVerified: true,
                modal: false,
                isMessageSent: false,
                isMessageLoading: false,
                isMessageErr: false
            }
        },
        methods: {
            enableBtn(response) {
                if (response.length > 1) this.captchaNotVerified = false
            },
            sendEmail() {
                if(!this.captchaNotVerified) {
                    this.errors = []

                    if(!this.formName) {
                        this.errors.push('Your name is required.');
                        grecaptcha.reset()
                        this.captchaNotVerified = false
                    }
                    if(!this.formSubject) {
                        this.errors.push('Your subject is required.');
                        grecaptcha.reset()
                        this.captchaNotVerified = false
                    }
                    if(!this.formMessage) {
                        this.errors.push('Your message is required.');
                        grecaptcha.reset()
                        this.captchaNotVerified = false
                    }
                    if(!this.formEmail) {
                        this.errors.push('Your email is required.');
                        grecaptcha.reset()
                        this.captchaNotVerified = false
                    }
                    
                    if (!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(String(this.formEmail).toLowerCase())) {
                        this.errors.push('Please enter a valid email address')
                        grecaptcha.reset()
                        this.captchaNotVerified = true
                    }

                    if(this.errors.length == 0) {
                        this.modal = true
                        this.isMessageLoading = true
                        emailjs.sendForm('contact_service','contact_form',this.$refs.contactForm).then(() => {
                            this.isMessageLoading = false
                            this.isMessageSent = true
                            console.log('mesg should be closed here')
                        }, (err) => {
                            this.isMessageErr = true
                            console.log('Err..', err)
                        });
                    }
                }
            },
            modalTryAgain() {
                // Reset
                this.modal = false
                this.isMessageSent = false
                this.isMessageLoading = false
                this.isMessageErr = false
                grecaptcha.reset()
            },
            checkWindow(screen) {
                if(screen.matches) {
                    // Remove forms element
                    this.screen = true
                } else {
                    // Bring back form element
                    this.screen = false
                }
            },
            conLog() {
                console.log('Callback');
            }
        },
        mounted() {
            emailjs.init("user_kSOE2xpZiHfQmTaRAjmzI")
            console.log('init')

            
            const screen = window.matchMedia("(max-width: 1023px)")
            this.checkWindow(screen)
            screen.addListener(() => {
                this.checkWindow(screen);
            });

            // Get Google Recaptcha response
            window.enableBtn = this.enableBtn
        },
      }).mount('#contactForm');
  </script>